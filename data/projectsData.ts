export const projects = [
  {
    id: "medimart",
    title: "MediMart",
    image: [
      "https://i.postimg.cc/157183F9/medi-1.png",
      "https://i.postimg.cc/1tXp5M1z/medi-2.png",
      "https://i.postimg.cc/ryvY3R5X/medi-3.png",
    ],
    shortDesc: "Medicine e-commerce shop built with Next.js and TypeScript.",
    github: "https://github.com/Sabbir42001/medi-mart",
    live: "https://medimart-nu.vercel.app",
    overview: `MediMart is a modern, responsive medicine e-commerce platform designed to streamline the purchase of pharmaceutical products online. It supports user roles such as customer, admin, and pharmacist, with real-time features and secure checkout.`,
    features: [
      "User registration and login with JWT authentication",
      "Dynamic product catalog with filters and search",
      "Prescription upload and order placement",
      "Admin dashboard for managing medicines and orders",
      "Role-based access (user/admin/pharmacist)",
      "Real-time notifications and order tracking",
    ],
    tech: ["Next.js", "TypeScript", "Redux", "Express.js", "MongoDB", "Tailwind"],
    challenges: [
      "Integrating real-time updates using Socket.io",
      "Handling secure file uploads and prescription verification",
      "Managing complex user roles and protected routes",
      "Ensuring SEO-friendliness with server-side rendering in Next.js",
    ],
    futurePlans: [
      "Add payment gateway integration (SSLCommerz, Stripe)",
      "Implement review & rating system",
      "Mobile app version using React Native",
      "AI-based medicine recommendation system",
    ],
  },
  {
    id: "bike-store",
    title: "Bicycle Store",
    image: [
      "https://i.postimg.cc/MK7tLP6x/cycle-1.png",
      "https://i.postimg.cc/TP4cbB9j/cycle-2.png",
      "https://i.postimg.cc/cCQ7VCNx/cycle-3.png",
    ],
    shortDesc: "Bike e-commerce backend dashboard built with TypeScript and Express.",
    github: "https://github.com/Sabbir42001/cycle-mart",
    live: "https://cycle-mart-chi.vercel.app",
    overview: `Bicycle Store backend is a robust REST API system for managing an e-commerce inventory system. It provides secure endpoints for product, order, and user management with JWT protection.`,
    features: [
      "Full CRUD for bicycles, categories, and orders",
      "JWT-based role authorization for admins",
      "Paginated and searchable endpoints",
      "Form validation using Zod and error middleware",
    ],
    tech: ["TypeScript", "Express.js", "MongoDB", "Mongoose"],
    challenges: [
      "Designing scalable schema relationships",
      "Securing all routes using role-based access",
      "Building reusable controller-service architecture",
    ],
    futurePlans: [
      "Integrate frontend with Next.js",
      "Enable bulk upload via CSV",
      "Analytics dashboard with chart data",
    ],
  },
  {
    id: "food-unity",
    title: "Food Unity",
    image: [
      "https://i.postimg.cc/vHtLh4zS/food-1.png",
      "https://i.postimg.cc/13W0xbbv/food-2.png",
      "https://i.postimg.cc/KYwnjBGT/food-3.png",
    ],
    shortDesc: "A food-sharing web app built with React, Firebase, and Node.js.",
    github: "https://github.com/Sabbir42001/food-unity",
    live: "https://foodunity-cc2e3.web.app",
    overview: `Food Unity is a community-driven application that encourages users to donate or request food. Itâ€™s built with the MERN stack and includes real-time role-based interactions for admins, donors, and recipients.`,
    features: [
      "Role-based dashboards for admin, donor, and recipient",
      "Add/view/request food with location filters",
      "Food status updates and real-time views",
      "Firebase Authentication for login/logout",
    ],
    tech: ["React", "Firebase", "Node.js", "Express.js", "MongoDB", "Tailwind CSS"],
    challenges: [
      "Synchronizing food request lifecycle",
      "Implementing conditional rendering based on user role",
      "Balancing usability for both donors and recipients",
    ],
    futurePlans: [
      "Add food expiration and reminders",
      "Push notifications and SMS alerts",
      "Mobile app support with offline mode",
    ],
  },
];
